@using DeviceManager.Models
@inherits LayoutComponentBase
@inject NotificationService NotificationService

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <label class="popup">
                <input type="checkbox">
                <div class="burger" tabindex="0">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bell-fill" viewBox="0 0 16 16">
                        <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2m.995-14.901a1 1 0 1 0-1.99 0A5 5 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901" />
                    </svg>
                </div>
                <nav class="popup-window">
                    <legend>Notifications</legend>
                    <hr />
                    <ul>
                        @foreach (Notification notification in NotificationService.NotificationQueue)
                        {
                            <li id="HOSTNAME">
                                <div class="card-header">
                                    <div class="profile-info">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle-fill margin-10" viewBox="0 0 16 16">
                                            <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2" />
                                        </svg>

                                        <div class="flex-column font-small-custom ">
                                            <div>ADMIN ACCESS</div>
                                            <p class="secondary-color"> @notification.Message</p>
                                        </div>
                                    </div>
                                    <div class="flex-column font-small-custom ">
                                        <div> @notification.DateTimeStamp.Date.ToShortDateString()</div>
                                        <p class="secondary-color"> @notification.DateTimeStamp.ToString("HH:mm:ss tt")</p>
                                    </div>
                                </div>

                            </li>
                            <hr />

                        }
                        </ul>
                </nav>
            </label>
        </div>

        <article class="content px-4">
            @Body
        </article>
        <MatPortalHost></MatPortalHost>
        <MatToastContainer/>
    </main>

      <script>
        function toggleDropdown() {
            var dropdown = document.getElementById('customDropdown');

            // Check if the dropdown is currently visible
            if (dropdown.style.display === 'block') {
                dropdown.style.display = 'none';
            } else {
                dropdown.style.display = 'block';
            }
        }
    </script>
</div>

@code {
 
}