@page "/support"


@inject IJSRuntime JSRuntime
@inject ThemeService ThemeService
@using System.Diagnostics
@using DeviceManager.Services
@using MatBlazor
@inject IMatToaster Toaster
@inherits Support_Base
@using Microsoft.AspNetCore.Components.Forms
@inject OEMInformationService oem

<div class="settings">
    @if (support != null)
    {
        if (ThemeService.CurrentTheme == "system")
        {
            AppTheme systemTheme = Application.Current!.RequestedTheme;
            ThemeService.CurrentTheme = (systemTheme == AppTheme.Dark) ? "dark" : "light";
            if (ThemeService.CurrentTheme == "dark")
            {
                <h1>
                    <span>

                        <img src="/Images/logo2.jpg" width="60" height="40" alt="logo" />
                    </span> @support.displayName
                </h1>
            }
            else
            {
                <h1>
                    <span>

                        <img src="/Images/logo.jpg" width="60" height="40" alt="logo" />
                    </span> @support.displayName
                </h1>
            }
        }
        else if (ThemeService.CurrentTheme == "dark")
        {
            <h1>
                <span>

                    <img src="/Images/logo.jpg" width="60" height="40" alt="logo" />
                </span> @support.displayName
            </h1>
        }
        else
        {
            <h1>
                <span>

                    <img src="/Images/logo2.jpg" width="60" height="40" alt="logo" />
                </span> @support.displayName
            </h1>
        }
    }
    <div class="settings grid">
        <h2>Contact Support</h2>


        <div class="flex-column">
           
        </div>
         <EditForm Model="@this" OnValidSubmit="SubmitCommand.Execute">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label for="device">Device Selection</label>
                @if (devicesOp != null)
                {
                    <select class="form-control" id="device-selection" @bind="Device">
                        @foreach (var deviceOption in devicesOp)
                        {
                            <option>@deviceOption</option>
                        }
                    </select>
                }

            </div>

            <div class="form-group">
                <label for="subject">Subject *</label>
                <input type="text" class="form-control" aria-describedby="emailHelp" placeholder="Subject" @bind="Subject">
                <div class="validation-message">
                    <ValidationMessage For="@(() => Subject)" />
                </div>
                @* <small id="error" class="form-text text-muted">error</small> *@
            </div>
            
                
            <div class="form-group">
                <label for="exampleFormControlTextarea1">Description*</label>

                    <textarea class="form-control" id="exampleFormControlTextarea1" rows="3" @bind="Description"></textarea>
                <div class="validation-message">
                    <ValidationMessage For="@(() => Description)" />
                </div>
            </div>

                <div>
                <label for="exampleFormControlTextarea1">Send Screenshot*</label>
                <div class="form-group mt-2">
                <small for="exampleFormControlTextarea1">Automatic</small>

                <label class="switch">
                        <input type="checkbox" @bind="isAutomaticScreenshotEnabled" @onclick="(async () => await ToggleScreenshotOption())">
                    <span class="slider round"></span>
                </label>
                <small for="exampleFormControlTextarea1">Manual</small>

            </div>
                </div>
            
                @if (isAutomaticScreenshotEnabled)
            
                {

                <div class="container">
                    <div class="d-flex justify-content-center">
                        <label for="file" class="d-flex flex-column align-items-center justify-content-center w-100 h-64 border border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:hover:bg-gray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600">
                            <div class="d-flex flex-column align-items-center justify-content-center pt-5 pb-6">
                                <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-cloud-upload" viewBox="0 0 16 16">
                                    <path fill-rule="evenodd" d="M4.406 1.342A5.53 5.53 0 0 1 8 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 0 1 0-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 0 0-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 0 1 0 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383" />
                                    <path fill-rule="evenodd" d="M7.646 4.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V14.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708z" />
                                </svg>
                                <p class="mb-2 text-sm text-gray-500 dark:text-gray-400"><span class="font-weight-bold">Click to upload</span> or drag and drop</p>
                                <p class="text-xs text-gray-500 dark:text-gray-400">SVG, PNG, JPG, or GIF (MAX. 800x400px)</p>
                            </div>
                            <input type="file" id="file" style="display: none;" />
                            @* <InputFile OnChange="HandleFileSelection" /> *@
                            @* @if (fileUpload!=null)
                            {
                                <p>Selected File: fileUploadPath</p>
                            } *@
                        </label>
                    </div>
                </div>
            }
            else
            {
            }

            <div class="gridhome">
                <div id="ASSET-TAG" class="user-card">
                    <div class="card-header">
                        <div class="profile-info">
                            <div class="activity-info">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-tag" viewBox="0 0 16 16">
                                    <path d="M6 4.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m-1 0a.5.5 0 1 0-1 0 .5.5 0 0 0 1 0" />
                                    <path d="M2 1h4.586a1 1 0 0 1 .707.293l7 7a1 1 0 0 1 0 1.414l-4.586 4.586a1 1 0 0 1-1.414 0l-7-7A1 1 0 0 1 1 6.586V2a1 1 0 0 1 1-1m0 5.586 7 7L13.586 9l-7-7H2z" />
                                </svg>
                            </div>

                            <div class="user-details">
                                <div>@DevicesService.currentDevice.assetTag</div>
                                <p class="secondary-color">ASSET TAG</p>
                            </div>
                        </div>
                        <div class="center-icon">
                            <svg @onclick="(async () => await CopyToClipboard(DevicesService.currentDevice.assetTag))" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z" />
                            </svg>
                        </div>
                    </div>
                </div>
                <div id="SERIAL-NUMBER" class="user-card">
                    <div class="card-header">
                        <div class="profile-info">
                            <div class="activity-info">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-upc-scan" viewBox="0 0 16 16">
                                    <path d="M1.5 1a.5.5 0 0 0-.5.5v3a.5.5 0 0 1-1 0v-3A1.5 1.5 0 0 1 1.5 0h3a.5.5 0 0 1 0 1zM11 .5a.5.5 0 0 1 .5-.5h3A1.5 1.5 0 0 1 16 1.5v3a.5.5 0 0 1-1 0v-3a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 1-.5-.5M.5 11a.5.5 0 0 1 .5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 1 0 1h-3A1.5 1.5 0 0 1 0 14.5v-3a.5.5 0 0 1 .5-.5m15 0a.5.5 0 0 1 .5.5v3a1.5 1.5 0 0 1-1.5 1.5h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 1 .5-.5M3 4.5a.5.5 0 0 1 1 0v7a.5.5 0 0 1-1 0zm2 0a.5.5 0 0 1 1 0v7a.5.5 0 0 1-1 0zm2 0a.5.5 0 0 1 1 0v7a.5.5 0 0 1-1 0zm2 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5zm3 0a.5.5 0 0 1 1 0v7a.5.5 0 0 1-1 0z" />
                                </svg>
                            </div>

                            <div class="user-details">
                                <div>@DevicesService.currentDevice.serialNumber</div>

                                <p class="secondary-color">SERIAL NUMBER</p>
                            </div>
                        </div>
                        <div class="center-icon">
                            <svg @onclick="(async () => await CopyToClipboard(DevicesService.currentDevice.serialNumber))" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z" />
                            </svg>
                        </div>
                    </div>
                </div>
            </div>


            <div class="button-group-form">
                <button type="button" class="btn btn-outline-secondary" @onclick="BackCommand.Execute">Back</button>
                <div>
                    <button type="button" class="btn btn-outline-secondary ml-4">Discard</button>
                    <button type="button" class="btn btn-primary" @onclick="SubmitCommand.Execute">Submit</button>
                </div>
            </div>

            </EditForm >
    </div>
    <div class="support-info">
        @if (support == null)
        {
            <p>loading...</p>
        }
        else
        {
            <p>Tech Support Name:<span class="primary-color-text"> @support.contactITName</span></p>
            <p>TECH SUPPORT:<span class="primary-color-text"> @support.contactITPhoneNumber</span></p>
            <p title="@support.onlineSupportSiteUrl">SUPPORT PORTAL:<NavLink class="primary-color-text" href="@support.onlineSupportSiteUrl"> @support.onlineSupportSiteName</NavLink></p>
        }
    </div>

</div>

@code{

}

<script>
    window.fun = async () => {
        const fileInput = document.getElementById("file");
        const file = fileInput.files[0];
        
        const data = new FormData();
        data.append("file", file);
        data.append("upload_preset", "qyipkvm1");
        data.append("cloud_name", "dvojlf2hl");

        try {
            const uploadRes = await fetch(
                "https://api.cloudinary.com/v1_1/dvojlf2hl/image/upload",
                {
                    method: 'POST',
                    body: data,
                }
            );

            const uploadResJson = await uploadRes.json();
            const { url } = uploadResJson;
            alert(url);
            return url;
        } catch (error) {
            console.error("Error uploading image:", error.message);
            return null;
        }
    };
</script>